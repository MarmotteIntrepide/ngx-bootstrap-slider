{"hash":"5f47b84f2d7570b5b14d959ba78ec9a074e6737e","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, EventEmitter, ViewChild, Input, Output, NgModule } from '@angular/core';\n\nclass NgxBootstrapSliderService {\n    constructor() { }\n}\nNgxBootstrapSliderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxBootstrapSliderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxBootstrapSliderComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxBootstrapSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxBootstrapSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.4\", type: NgxBootstrapSliderComponent, selector: \"mv-ngx-bootstrap-slider\", ngImport: i0, template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mv-ngx-bootstrap-slider',\n                    template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass SliderComponent {\n    constructor() {\n        this.initialOptions = {};\n        this.valueChange = new EventEmitter();\n        // The following events are emitted\n        this.slide = new EventEmitter();\n        this.slideStart = new EventEmitter();\n        this.slideStop = new EventEmitter();\n        this.change = new EventEmitter();\n    }\n    // This property is not applied to the underlying slider element\n    set style(value) {\n        if (this.slider) {\n            this.slider.getElement().setAttribute('style', value);\n        }\n        else {\n            this.initialStyle = value;\n        }\n    }\n    // Handle the value (two-way)\n    set value(value) {\n        if (this.slider) {\n            this.slider.setValue(value);\n        }\n        else {\n            this.initialOptions.value = value;\n        }\n    }\n    // The following properties are applied to the underlying slider element\n    set min(value) {\n        this.changeAttribute('min', value);\n    }\n    set max(value) {\n        this.changeAttribute('max', value);\n    }\n    set step(value) {\n        this.changeAttribute('step', value);\n    }\n    set precision(value) {\n        this.changeAttribute('precision', value);\n    }\n    set orientation(value) {\n        this.changeAttribute('orientation', value);\n    }\n    set range(value) {\n        this.changeAttribute('range', value);\n    }\n    set selection(value) {\n        this.changeAttribute('selection', value);\n    }\n    set tooltip(value) {\n        this.changeAttribute('tooltip', value);\n    }\n    set tooltipSplit(value) {\n        this.changeAttribute('tooltip_split', value);\n    }\n    set tooltipPosition(value) {\n        this.changeAttribute('tooltip_position', value);\n    }\n    set handle(value) {\n        this.changeAttribute('handle', value);\n    }\n    set reversed(value) {\n        this.changeAttribute('reversed', value);\n    }\n    set rtl(value) {\n        this.changeAttribute('rtl', value);\n    }\n    set enabled(value) {\n        this.changeAttribute('enabled', value);\n    }\n    set naturalArrowKeys(value) {\n        this.changeAttribute('natural_arrow_keys', value);\n    }\n    set ticks(value) {\n        this.changeAttribute('ticks', value);\n    }\n    set ticksPositions(value) {\n        this.changeAttribute('ticks_positions', value);\n    }\n    set ticksLabels(value) {\n        this.changeAttribute('ticks_labels', value);\n    }\n    set ticksSnapBounds(value) {\n        this.changeAttribute('ticks_snap_bounds', value);\n    }\n    set ticksTooltip(value) {\n        this.changeAttribute('ticks_tooltip', value);\n    }\n    set scale(value) {\n        this.changeAttribute('scale', value);\n    }\n    set labelledBy(value) {\n        this.changeAttribute('labelledby', value);\n    }\n    set rangeHighlights(value) {\n        this.changeAttribute('rangeHighlights', value);\n    }\n    set formatter(value) {\n        this.changeAttribute('formatter', value);\n    }\n    set lockToTicks(value) {\n        this.changeAttribute('lock_to_ticks', value);\n    }\n    addChangeListeners() {\n        this.slider.on('slide', (value) => {\n            this.slide.emit(value);\n        });\n        this.slider.on('slideStart', (value) => {\n            this.slideStart.emit(value);\n        });\n        this.slider.on('slideStop', (value) => {\n            this.slideStop.emit(value);\n        });\n        this.slider.on('change', (event) => {\n            this.change.emit(event);\n            this.valueChange.emit(event.newValue);\n        });\n    }\n    prepareSlider() {\n        // We need to add the change listeners again after each refresh\n        this.addChangeListeners();\n        // Add the styling to the element\n        this.slider.getElement().setAttribute('style', this.initialStyle);\n    }\n    changeAttribute(name, value) {\n        if (this.slider) {\n            this.slider.setAttribute(name, value);\n            this.slider.refresh();\n            this.prepareSlider();\n        }\n        else {\n            this.initialOptions[name] = value;\n        }\n    }\n    ngOnInit() {\n        // Don't set the value over the initial options, because it will alway\n        // be reset. This option seems to be a little buggy.\n        let value = undefined;\n        if (this.initialOptions.value) {\n            value = this.initialOptions.value;\n            delete this.initialOptions['value'];\n        }\n        this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);\n        if (value) {\n            this.slider.setValue(value);\n        }\n        this.prepareSlider();\n    }\n}\nSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: SliderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.4\", type: SliderComponent, selector: \"mv-slider\", inputs: { style: \"style\", value: \"value\", min: \"min\", max: \"max\", step: \"step\", precision: \"precision\", orientation: \"orientation\", range: \"range\", selection: \"selection\", tooltip: \"tooltip\", tooltipSplit: \"tooltipSplit\", tooltipPosition: \"tooltipPosition\", handle: \"handle\", reversed: \"reversed\", rtl: \"rtl\", enabled: \"enabled\", naturalArrowKeys: \"naturalArrowKeys\", ticks: \"ticks\", ticksPositions: \"ticksPositions\", ticksLabels: \"ticksLabels\", ticksSnapBounds: \"ticksSnapBounds\", ticksTooltip: \"ticksTooltip\", scale: \"scale\", labelledBy: \"labelledBy\", rangeHighlights: \"rangeHighlights\", formatter: \"formatter\", lockToTicks: \"lockToTicks\" }, outputs: { valueChange: \"valueChange\", slide: \"slide\", slideStart: \"slideStart\", slideStop: \"slideStop\", change: \"change\" }, viewQueries: [{ propertyName: \"sliderElement\", first: true, predicate: [\"slider\"], descendants: true, static: true }], ngImport: i0, template: \"<input #slider>\", styles: [\"\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: SliderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mv-slider', template: \"<input #slider>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { sliderElement: [{\n                type: ViewChild,\n                args: ['slider', { static: true }]\n            }], style: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], precision: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], range: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipSplit: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], handle: [{\n                type: Input\n            }], reversed: [{\n                type: Input\n            }], rtl: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], naturalArrowKeys: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], ticksPositions: [{\n                type: Input\n            }], ticksLabels: [{\n                type: Input\n            }], ticksSnapBounds: [{\n                type: Input\n            }], ticksTooltip: [{\n                type: Input\n            }], scale: [{\n                type: Input\n            }], labelledBy: [{\n                type: Input\n            }], rangeHighlights: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], lockToTicks: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slideStart: [{\n                type: Output\n            }], slideStop: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }] } });\n\nclass NgxBootstrapSliderModule {\n}\nNgxBootstrapSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxBootstrapSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, declarations: [NgxBootstrapSliderComponent, SliderComponent], exports: [NgxBootstrapSliderComponent,\n        SliderComponent] });\nNgxBootstrapSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [NgxBootstrapSliderComponent, SliderComponent],\n                    exports: [\n                        NgxBootstrapSliderComponent,\n                        SliderComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-bootstrap-slider\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxBootstrapSliderComponent, NgxBootstrapSliderModule, NgxBootstrapSliderService, SliderComponent };\n//# sourceMappingURL=filipve1994-ngx-bootstrap-slider.mjs.map\n","map":{"version":3,"file":"filipve1994-ngx-bootstrap-slider.mjs","sources":["../../src/lib/ngx-bootstrap-slider.service.ts","../../src/lib/ngx-bootstrap-slider.component.ts","../../src/lib/slider/slider.component.ts","../../src/lib/slider/slider.component.html","../../src/lib/ngx-bootstrap-slider.module.ts","../../src/public_api.ts","../../src/filipve1994-ngx-bootstrap-slider.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxBootstrapSliderService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mv-ngx-bootstrap-slider',\n  template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxBootstrapSliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\n\ndeclare var Slider: any;\n\n@Component({\n  selector: 'mv-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n  // The slider HTML element\n  @ViewChild('slider', { static: true }) sliderElement: any;\n\n  // The slider object\n  slider: any;\n\n  initialOptions: any = {};\n  initialStyle: any;\n\n  // This property is not applied to the underlying slider element\n  @Input()\n  set style(value: any) {\n    if (this.slider) {\n      this.slider.getElement().setAttribute('style', value);\n    } else {\n      this.initialStyle = value;\n    }\n  }\n\n  // Handle the value (two-way)\n  @Input()\n  set value(value: number | any[]) {\n    if (this.slider) {\n      this.slider.setValue(value);\n    } else {\n      this.initialOptions.value = value;\n    }\n  }\n  @Output() valueChange = new EventEmitter();\n\n  // The following properties are applied to the underlying slider element\n  @Input()\n  set min(value: number) {\n    this.changeAttribute('min', value);\n  }\n\n  @Input()\n  set max(value: number) {\n    this.changeAttribute('max', value);\n  }\n\n  @Input()\n  set step(value: number) {\n    this.changeAttribute('step', value);\n  }\n\n  @Input()\n  set precision(value: number) {\n    this.changeAttribute('precision', value);\n  }\n\n  @Input()\n  set orientation(value: string) {\n    this.changeAttribute('orientation', value);\n  }\n\n  @Input()\n  set range(value: boolean) {\n    this.changeAttribute('range', value);\n  }\n\n  @Input()\n  set selection(value: string) {\n    this.changeAttribute('selection', value);\n  }\n\n  @Input()\n  set tooltip(value: string) {\n    this.changeAttribute('tooltip', value);\n  }\n\n  @Input()\n  set tooltipSplit(value: boolean) {\n    this.changeAttribute('tooltip_split', value);\n  }\n\n  @Input()\n  set tooltipPosition(value: string) {\n    this.changeAttribute('tooltip_position', value);\n  }\n\n  @Input()\n  set handle(value: string) {\n    this.changeAttribute('handle', value);\n  }\n\n  @Input()\n  set reversed(value: boolean) {\n    this.changeAttribute('reversed', value);\n  }\n\n  @Input()\n  set rtl(value: boolean) {\n    this.changeAttribute('rtl', value);\n  }\n\n  @Input()\n  set enabled(value: boolean) {\n    this.changeAttribute('enabled', value);\n  }\n\n  @Input()\n  set naturalArrowKeys(value: boolean) {\n    this.changeAttribute('natural_arrow_keys', value);\n  }\n\n  @Input()\n  set ticks(value: any[]) {\n    this.changeAttribute('ticks', value);\n  }\n\n  @Input()\n  set ticksPositions(value: number[]) {\n    this.changeAttribute('ticks_positions', value);\n  }\n\n  @Input()\n  set ticksLabels(value: string[]) {\n    this.changeAttribute('ticks_labels', value);\n  }\n\n  @Input()\n  set ticksSnapBounds(value: number) {\n    this.changeAttribute('ticks_snap_bounds', value);\n  }\n\n  @Input()\n  set ticksTooltip(value: boolean) {\n    this.changeAttribute('ticks_tooltip', value);\n  }\n\n  @Input()\n  set scale(value: string) {\n    this.changeAttribute('scale', value);\n  }\n\n  @Input()\n  set labelledBy(value: string[]) {\n    this.changeAttribute('labelledby', value);\n  }\n\n  @Input()\n  set rangeHighlights(value: any[]) {\n    this.changeAttribute('rangeHighlights', value);\n  }\n\n  @Input()\n  set formatter(value: Function) {\n    this.changeAttribute('formatter', value);\n  }\n\n  @Input()\n  set lockToTicks(value: Function) {\n    this.changeAttribute('lock_to_ticks', value);\n  }\n\n  // The following events are emitted\n  @Output() slide = new EventEmitter();\n\n  @Output() slideStart = new EventEmitter();\n\n  @Output() slideStop = new EventEmitter();\n\n  @Output() change = new EventEmitter();\n\n  constructor() { }\n\n  private addChangeListeners() {\n    this.slider.on('slide', (value: any) => {\n      this.slide.emit(value);\n    });\n\n    this.slider.on('slideStart', (value: any) => {\n      this.slideStart.emit(value);\n    });\n\n    this.slider.on('slideStop', (value: any) => {\n      this.slideStop.emit(value);\n    });\n\n    this.slider.on('change', (event: any) => {\n      this.change.emit(event);\n      this.valueChange.emit(event.newValue);\n    });\n  }\n\n  private prepareSlider() {\n    // We need to add the change listeners again after each refresh\n    this.addChangeListeners();\n\n    // Add the styling to the element\n    this.slider.getElement().setAttribute('style', this.initialStyle);\n  }\n\n  private changeAttribute(name: string, value: any) {\n    if (this.slider) {\n      this.slider.setAttribute(name, value);\n      this.slider.refresh();\n      this.prepareSlider();\n    } else {\n      this.initialOptions[name] = value;\n    }\n  }\n\n  ngOnInit() {\n    // Don't set the value over the initial options, because it will alway\n    // be reset. This option seems to be a little buggy.\n    let value = undefined;\n\n    if (this.initialOptions.value) {\n      value = this.initialOptions.value;\n      delete this.initialOptions['value'];\n    }\n\n    this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);\n\n    if (value) {\n      this.slider.setValue(value);\n    }\n\n    this.prepareSlider();\n  }\n\n}\n","<input #slider>","import { NgModule } from '@angular/core';\nimport { NgxBootstrapSliderComponent } from './ngx-bootstrap-slider.component';\nimport { SliderComponent } from './slider/slider.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxBootstrapSliderComponent, SliderComponent],\n  exports: [\n    NgxBootstrapSliderComponent,\n    SliderComponent\n  ]\n})\nexport class NgxBootstrapSliderModule { }\n","/*\n * Public API Surface of ngx-bootstrap-slider\n */\n\nexport * from './lib/ngx-bootstrap-slider.service';\nexport * from './lib/ngx-bootstrap-slider.component';\nexport * from './lib/ngx-bootstrap-slider.module';\nexport * from './lib/slider/slider.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, EventEmitter, ViewChild, Input, Output, NgModule } from '@angular/core';\n\nclass NgxBootstrapSliderService {\n    constructor() { }\n}\nNgxBootstrapSliderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxBootstrapSliderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxBootstrapSliderComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxBootstrapSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxBootstrapSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.4\", type: NgxBootstrapSliderComponent, selector: \"mv-ngx-bootstrap-slider\", ngImport: i0, template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mv-ngx-bootstrap-slider',\n                    template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass SliderComponent {\n    constructor() {\n        this.initialOptions = {};\n        this.valueChange = new EventEmitter();\n        // The following events are emitted\n        this.slide = new EventEmitter();\n        this.slideStart = new EventEmitter();\n        this.slideStop = new EventEmitter();\n        this.change = new EventEmitter();\n    }\n    // This property is not applied to the underlying slider element\n    set style(value) {\n        if (this.slider) {\n            this.slider.getElement().setAttribute('style', value);\n        }\n        else {\n            this.initialStyle = value;\n        }\n    }\n    // Handle the value (two-way)\n    set value(value) {\n        if (this.slider) {\n            this.slider.setValue(value);\n        }\n        else {\n            this.initialOptions.value = value;\n        }\n    }\n    // The following properties are applied to the underlying slider element\n    set min(value) {\n        this.changeAttribute('min', value);\n    }\n    set max(value) {\n        this.changeAttribute('max', value);\n    }\n    set step(value) {\n        this.changeAttribute('step', value);\n    }\n    set precision(value) {\n        this.changeAttribute('precision', value);\n    }\n    set orientation(value) {\n        this.changeAttribute('orientation', value);\n    }\n    set range(value) {\n        this.changeAttribute('range', value);\n    }\n    set selection(value) {\n        this.changeAttribute('selection', value);\n    }\n    set tooltip(value) {\n        this.changeAttribute('tooltip', value);\n    }\n    set tooltipSplit(value) {\n        this.changeAttribute('tooltip_split', value);\n    }\n    set tooltipPosition(value) {\n        this.changeAttribute('tooltip_position', value);\n    }\n    set handle(value) {\n        this.changeAttribute('handle', value);\n    }\n    set reversed(value) {\n        this.changeAttribute('reversed', value);\n    }\n    set rtl(value) {\n        this.changeAttribute('rtl', value);\n    }\n    set enabled(value) {\n        this.changeAttribute('enabled', value);\n    }\n    set naturalArrowKeys(value) {\n        this.changeAttribute('natural_arrow_keys', value);\n    }\n    set ticks(value) {\n        this.changeAttribute('ticks', value);\n    }\n    set ticksPositions(value) {\n        this.changeAttribute('ticks_positions', value);\n    }\n    set ticksLabels(value) {\n        this.changeAttribute('ticks_labels', value);\n    }\n    set ticksSnapBounds(value) {\n        this.changeAttribute('ticks_snap_bounds', value);\n    }\n    set ticksTooltip(value) {\n        this.changeAttribute('ticks_tooltip', value);\n    }\n    set scale(value) {\n        this.changeAttribute('scale', value);\n    }\n    set labelledBy(value) {\n        this.changeAttribute('labelledby', value);\n    }\n    set rangeHighlights(value) {\n        this.changeAttribute('rangeHighlights', value);\n    }\n    set formatter(value) {\n        this.changeAttribute('formatter', value);\n    }\n    set lockToTicks(value) {\n        this.changeAttribute('lock_to_ticks', value);\n    }\n    addChangeListeners() {\n        this.slider.on('slide', (value) => {\n            this.slide.emit(value);\n        });\n        this.slider.on('slideStart', (value) => {\n            this.slideStart.emit(value);\n        });\n        this.slider.on('slideStop', (value) => {\n            this.slideStop.emit(value);\n        });\n        this.slider.on('change', (event) => {\n            this.change.emit(event);\n            this.valueChange.emit(event.newValue);\n        });\n    }\n    prepareSlider() {\n        // We need to add the change listeners again after each refresh\n        this.addChangeListeners();\n        // Add the styling to the element\n        this.slider.getElement().setAttribute('style', this.initialStyle);\n    }\n    changeAttribute(name, value) {\n        if (this.slider) {\n            this.slider.setAttribute(name, value);\n            this.slider.refresh();\n            this.prepareSlider();\n        }\n        else {\n            this.initialOptions[name] = value;\n        }\n    }\n    ngOnInit() {\n        // Don't set the value over the initial options, because it will alway\n        // be reset. This option seems to be a little buggy.\n        let value = undefined;\n        if (this.initialOptions.value) {\n            value = this.initialOptions.value;\n            delete this.initialOptions['value'];\n        }\n        this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);\n        if (value) {\n            this.slider.setValue(value);\n        }\n        this.prepareSlider();\n    }\n}\nSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: SliderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.4\", type: SliderComponent, selector: \"mv-slider\", inputs: { style: \"style\", value: \"value\", min: \"min\", max: \"max\", step: \"step\", precision: \"precision\", orientation: \"orientation\", range: \"range\", selection: \"selection\", tooltip: \"tooltip\", tooltipSplit: \"tooltipSplit\", tooltipPosition: \"tooltipPosition\", handle: \"handle\", reversed: \"reversed\", rtl: \"rtl\", enabled: \"enabled\", naturalArrowKeys: \"naturalArrowKeys\", ticks: \"ticks\", ticksPositions: \"ticksPositions\", ticksLabels: \"ticksLabels\", ticksSnapBounds: \"ticksSnapBounds\", ticksTooltip: \"ticksTooltip\", scale: \"scale\", labelledBy: \"labelledBy\", rangeHighlights: \"rangeHighlights\", formatter: \"formatter\", lockToTicks: \"lockToTicks\" }, outputs: { valueChange: \"valueChange\", slide: \"slide\", slideStart: \"slideStart\", slideStop: \"slideStop\", change: \"change\" }, viewQueries: [{ propertyName: \"sliderElement\", first: true, predicate: [\"slider\"], descendants: true, static: true }], ngImport: i0, template: \"<input #slider>\", styles: [\"\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: SliderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mv-slider', template: \"<input #slider>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { sliderElement: [{\n                type: ViewChild,\n                args: ['slider', { static: true }]\n            }], style: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], precision: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], range: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipSplit: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], handle: [{\n                type: Input\n            }], reversed: [{\n                type: Input\n            }], rtl: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], naturalArrowKeys: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], ticksPositions: [{\n                type: Input\n            }], ticksLabels: [{\n                type: Input\n            }], ticksSnapBounds: [{\n                type: Input\n            }], ticksTooltip: [{\n                type: Input\n            }], scale: [{\n                type: Input\n            }], labelledBy: [{\n                type: Input\n            }], rangeHighlights: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], lockToTicks: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slideStart: [{\n                type: Output\n            }], slideStop: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }] } });\n\nclass NgxBootstrapSliderModule {\n}\nNgxBootstrapSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxBootstrapSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, declarations: [NgxBootstrapSliderComponent, SliderComponent], exports: [NgxBootstrapSliderComponent,\n        SliderComponent] });\nNgxBootstrapSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.4\", ngImport: i0, type: NgxBootstrapSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [NgxBootstrapSliderComponent, SliderComponent],\n                    exports: [\n                        NgxBootstrapSliderComponent,\n                        SliderComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-bootstrap-slider\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxBootstrapSliderComponent, NgxBootstrapSliderModule, NgxBootstrapSliderService, SliderComponent };\n//# sourceMappingURL=filipve1994-ngx-bootstrap-slider.mjs.map\n","map":{"version":3,"file":"filipve1994-ngx-bootstrap-slider.mjs","sources":["../../src/lib/ngx-bootstrap-slider.service.ts","../../src/lib/ngx-bootstrap-slider.component.ts","../../src/lib/slider/slider.component.ts","../../src/lib/slider/slider.component.html","../../src/lib/ngx-bootstrap-slider.module.ts","../../src/public_api.ts","../../src/filipve1994-ngx-bootstrap-slider.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxBootstrapSliderService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mv-ngx-bootstrap-slider',\n  template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxBootstrapSliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\n\ndeclare var Slider: any;\n\n@Component({\n  selector: 'mv-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n  // The slider HTML element\n  @ViewChild('slider', { static: true }) sliderElement: any;\n\n  // The slider object\n  slider: any;\n\n  initialOptions: any = {};\n  initialStyle: any;\n\n  // This property is not applied to the underlying slider element\n  @Input()\n  set style(value: any) {\n    if (this.slider) {\n      this.slider.getElement().setAttribute('style', value);\n    } else {\n      this.initialStyle = value;\n    }\n  }\n\n  // Handle the value (two-way)\n  @Input()\n  set value(value: number | any[]) {\n    if (this.slider) {\n      this.slider.setValue(value);\n    } else {\n      this.initialOptions.value = value;\n    }\n  }\n  @Output() valueChange = new EventEmitter();\n\n  // The following properties are applied to the underlying slider element\n  @Input()\n  set min(value: number) {\n    this.changeAttribute('min', value);\n  }\n\n  @Input()\n  set max(value: number) {\n    this.changeAttribute('max', value);\n  }\n\n  @Input()\n  set step(value: number) {\n    this.changeAttribute('step', value);\n  }\n\n  @Input()\n  set precision(value: number) {\n    this.changeAttribute('precision', value);\n  }\n\n  @Input()\n  set orientation(value: string) {\n    this.changeAttribute('orientation', value);\n  }\n\n  @Input()\n  set range(value: boolean) {\n    this.changeAttribute('range', value);\n  }\n\n  @Input()\n  set selection(value: string) {\n    this.changeAttribute('selection', value);\n  }\n\n  @Input()\n  set tooltip(value: string) {\n    this.changeAttribute('tooltip', value);\n  }\n\n  @Input()\n  set tooltipSplit(value: boolean) {\n    this.changeAttribute('tooltip_split', value);\n  }\n\n  @Input()\n  set tooltipPosition(value: string) {\n    this.changeAttribute('tooltip_position', value);\n  }\n\n  @Input()\n  set handle(value: string) {\n    this.changeAttribute('handle', value);\n  }\n\n  @Input()\n  set reversed(value: boolean) {\n    this.changeAttribute('reversed', value);\n  }\n\n  @Input()\n  set rtl(value: boolean) {\n    this.changeAttribute('rtl', value);\n  }\n\n  @Input()\n  set enabled(value: boolean) {\n    this.changeAttribute('enabled', value);\n  }\n\n  @Input()\n  set naturalArrowKeys(value: boolean) {\n    this.changeAttribute('natural_arrow_keys', value);\n  }\n\n  @Input()\n  set ticks(value: any[]) {\n    this.changeAttribute('ticks', value);\n  }\n\n  @Input()\n  set ticksPositions(value: number[]) {\n    this.changeAttribute('ticks_positions', value);\n  }\n\n  @Input()\n  set ticksLabels(value: string[]) {\n    this.changeAttribute('ticks_labels', value);\n  }\n\n  @Input()\n  set ticksSnapBounds(value: number) {\n    this.changeAttribute('ticks_snap_bounds', value);\n  }\n\n  @Input()\n  set ticksTooltip(value: boolean) {\n    this.changeAttribute('ticks_tooltip', value);\n  }\n\n  @Input()\n  set scale(value: string) {\n    this.changeAttribute('scale', value);\n  }\n\n  @Input()\n  set labelledBy(value: string[]) {\n    this.changeAttribute('labelledby', value);\n  }\n\n  @Input()\n  set rangeHighlights(value: any[]) {\n    this.changeAttribute('rangeHighlights', value);\n  }\n\n  @Input()\n  set formatter(value: Function) {\n    this.changeAttribute('formatter', value);\n  }\n\n  @Input()\n  set lockToTicks(value: Function) {\n    this.changeAttribute('lock_to_ticks', value);\n  }\n\n  // The following events are emitted\n  @Output() slide = new EventEmitter();\n\n  @Output() slideStart = new EventEmitter();\n\n  @Output() slideStop = new EventEmitter();\n\n  @Output() change = new EventEmitter();\n\n  constructor() { }\n\n  private addChangeListeners() {\n    this.slider.on('slide', (value: any) => {\n      this.slide.emit(value);\n    });\n\n    this.slider.on('slideStart', (value: any) => {\n      this.slideStart.emit(value);\n    });\n\n    this.slider.on('slideStop', (value: any) => {\n      this.slideStop.emit(value);\n    });\n\n    this.slider.on('change', (event: any) => {\n      this.change.emit(event);\n      this.valueChange.emit(event.newValue);\n    });\n  }\n\n  private prepareSlider() {\n    // We need to add the change listeners again after each refresh\n    this.addChangeListeners();\n\n    // Add the styling to the element\n    this.slider.getElement().setAttribute('style', this.initialStyle);\n  }\n\n  private changeAttribute(name: string, value: any) {\n    if (this.slider) {\n      this.slider.setAttribute(name, value);\n      this.slider.refresh();\n      this.prepareSlider();\n    } else {\n      this.initialOptions[name] = value;\n    }\n  }\n\n  ngOnInit() {\n    // Don't set the value over the initial options, because it will alway\n    // be reset. This option seems to be a little buggy.\n    let value = undefined;\n\n    if (this.initialOptions.value) {\n      value = this.initialOptions.value;\n      delete this.initialOptions['value'];\n    }\n\n    this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);\n\n    if (value) {\n      this.slider.setValue(value);\n    }\n\n    this.prepareSlider();\n  }\n\n}\n","<input #slider>","import { NgModule } from '@angular/core';\nimport { NgxBootstrapSliderComponent } from './ngx-bootstrap-slider.component';\nimport { SliderComponent } from './slider/slider.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxBootstrapSliderComponent, SliderComponent],\n  exports: [\n    NgxBootstrapSliderComponent,\n    SliderComponent\n  ]\n})\nexport class NgxBootstrapSliderModule { }\n","/*\n * Public API Surface of ngx-bootstrap-slider\n */\n\nexport * from './lib/ngx-bootstrap-slider.service';\nexport * from './lib/ngx-bootstrap-slider.component';\nexport * from './lib/ngx-bootstrap-slider.module';\nexport * from './lib/slider/slider.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}}}